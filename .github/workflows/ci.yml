name: Go CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASS }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      kafka:
        image: bitnami/kafka:3.7
        ports:
          - "9092:9092"
        env:
          KAFKA_CFG_NODE_ID: 0
          KAFKA_CFG_PROCESS_ROLES: broker,controller
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9094
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9093,CONTROLLER://:9094,EXTERNAL://:9092
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,EXTERNAL://localhost:9092
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
          ALLOW_PLAINTEXT_LISTENER: "yes"
        options: >-
          --health-cmd "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9093 --list"
          --health-interval 15s
          --health-timeout 10s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3.13-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASS }}
        ports:
          - "5672:5672"
          - "15672:15672"
        options:
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      POSTGRES_DSN: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASS }}@localhost:5432/${{ secrets.POSTGRES_DB }}?sslmode=disable
      REDIS_ADDR: localhost:6379
      REDIS_DB: 1
      KAFKA_BROKERS: localhost:9092
      RABBITMQ_URL: amqp://${{ secrets.RABBITMQ_USER }}:${{ secrets.RABBITMQ_PASS }}@localhost:5672/
      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Run DB migrations
        run: goose -dir "db/migrations" postgres "$POSTGRES_DSN" up

      - name: Run Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64

      - name: Run Integration Tests
        run: go test -v ./...