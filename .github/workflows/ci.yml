name: Go CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Run DB migrations
        run: goose -dir "db/migrations" postgres "${{ env.POSTGRES_DSN }}" up
        env:
          POSTGRES_DSN: "postgres://testuser:testpassword@localhost:5432/testdb?sslmode=disable"

      - name: Run Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64

      - name: Run Integration Tests
        run: go test -v ./...
        env:
          POSTGRES_DSN: "postgres://testuser:testpassword@localhost:5432/testdb?sslmode=disable"
          REDIS_ADDR: localhost:6379
          REDIS_DB: 1
