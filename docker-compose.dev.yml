services:
  order-service:
    build:
      context: .
      dockerfile: cmd/order-service/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
      kafka: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_DB: orderflow_dev_db
      POSTGRES_HOST: ${POSTGRES_HOST}
      REDIS_ADDR: "redis:6379"
      REDIS_DB: 0
      KAFKA_BROKERS: "kafka:9093"
      PRODUCT_SERVICE_ADDR: "product-service:50051"
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    restart: on-failure

  inventory-service:
    build:
      context: .
      dockerfile: cmd/inventory-service/Dockerfile
    depends_on:
      kafka: { condition: service_healthy }
      db: { condition: service_healthy }
    environment:
      KAFKA_BROKERS: "kafka:9093"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_DB: orderflow_dev_db
      POSTGRES_HOST: ${POSTGRES_HOST}
    restart: on-failure

  notification-service:
    build:
      context: .
      dockerfile: cmd/notification-service/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
    restart: on-failure

  product-service:
    build:
      context: .
      dockerfile: cmd/product-service/Dockerfile
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "50051:50051"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_DB: orderflow_dev_db
      POSTGRES_HOST: ${POSTGRES_HOST}
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - order-service

  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
