services:
  order-service:
    build:
      context: .
      dockerfile: cmd/order-service/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - kafka
    environment:
      - POSTGRES_DSN=${POSTGRES_DSN}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_DB=${REDIS_DB}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
    restart: on-failure

  inventory-service:
    build:
      context: .
      dockerfile: cmd/inventory-service/Dockerfile
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=${KAFKA_BROKERS}
    restart: on-failure

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.4.6
    container_name: redpanda-console
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_BROKERS: "kafka:9092"

volumes:
  db-data:
  redis-data:
